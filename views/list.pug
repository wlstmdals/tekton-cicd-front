if messages.length > 0
    for msg in messages
        // 카드에 Lazy Loading 적용
        .card.my-3.col-12.lazy(onclick=`playSong('${msg.mp3}', '${msg.title}', '${msg.artist}', '${msg.image}', '${msg.tracknum}', '${msg.views}'); handleCardClick(${msg.tracknum});`, data-src-image=msg.image)
            .card-body.d-flex
                // 이미지 로드 후 나타나게 함
                img.img-box(src='', alt='image', class='lazy-img')
                .ml-3.flex-grow-1
                    h5.card-title #{msg.title}
                    h6.card-subtitle.mb-2.text-muted #{msg.slength}
                    p.card-text #{msg.artist}
                    h10.card-text #{msg.mp3}
                    h6.card-subtitle.mb-2.text-muted played: #{msg.views}
else
    p.alert.alert-info(role='alert')
        | There is currently no data in the guestbook.

script.
    // Lazy Loading 스크립트
    document.addEventListener('DOMContentLoaded', function() {
        const lazyCards = document.querySelectorAll('.card'); // 카드만 감지

        if ('IntersectionObserver' in window) {
            const cardObserver = new IntersectionObserver((entries, observer) => {
                entries.forEach(entry => {
                    if (entry.isIntersecting) {
                        const card = entry.target;
                        const img = card.querySelector('.lazy-img');
                        // 이미지 src 설정
                        img.src = card.dataset.srcImage;
                        img.classList.add('loaded');
                        card.classList.add('visible'); // 카드 애니메이션 추가
                        observer.unobserve(card); // 감시 중단
                    }
                });
            });

            // 모든 카드 감시 시작
            lazyCards.forEach(card => cardObserver.observe(card));
        } else {
            // IntersectionObserver 미지원 브라우저 대체 처리
            lazyCards.forEach(card => {
                const img = card.querySelector('.lazy-img');
                img.src = card.dataset.srcImage;
                img.classList.add('loaded');
                card.classList.add('visible');
            });
        }
    });
    
    // PATCH API 호출 함수
    async function handleCardClick(tracknum) {
        try {
            const response = await fetch(`/${tracknum}`, { method: 'PATCH' });
            if (response.ok) {
                const updatedData = await response.json();
                console.log(`Views updated for tracknum ${tracknum}:`, updatedData);
            } else {
                console.error(`Failed to update views for tracknum ${tracknum}:`, response.statusText);
            }
        } catch (error) {
            console.error(`Error during PATCH request for tracknum ${tracknum}:`, error.message);
        }
    }